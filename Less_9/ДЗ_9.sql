

/*
 * ДЗ_9
 * https://docs.google.com/document/d/1B7QId3ePJMmygsr8wTPZz0Tzh4uX_JyjbVY3xZC6ePo/edit#
 * 
 * Практическое задание по теме “Транзакции, переменные, представления”
В базе данных shop и sample присутствуют одни и те же таблицы, учебной базы данных. Переместите запись id = 1 из таблицы shop.users в таблицу sample.users. Используйте транзакции.
Создайте представление, которое выводит название name товарной позиции из таблицы products и соответствующее название каталога name из таблицы catalogs.
по желанию) Пусть имеется таблица с календарным полем created_at. В ней размещены разряженые календарные записи за август 2018 года '2018-08-01', '2016-08-04', '2018-08-16' и 2018-08-17. Составьте запрос, который выводит полный список дат за август, выставляя в соседнем поле значение 1, если дата присутствует в исходном таблице и 0, если она отсутствует.
(по желанию) Пусть имеется любая таблица с календарным полем created_at. Создайте запрос, который удаляет устаревшие записи из таблицы, оставляя только 5 самых свежих записей.

Практическое задание по теме “Администрирование MySQL” (эта тема изучается по вашему желанию)
Создайте двух пользователей которые имеют доступ к базе данных shop. Первому пользователю shop_read должны быть доступны только запросы на чтение данных, второму пользователю shop — любые операции в пределах базы данных shop.
(по желанию) Пусть имеется таблица accounts содержащая три столбца id, name, password, содержащие первичный ключ, имя пользователя и его пароль. Создайте представление username таблицы accounts, предоставляющий доступ к столбца id и name. Создайте пользователя user_read, который бы не имел доступа к таблице accounts, однако, мог бы извлекать записи из представления username.

Практическое задание по теме “Хранимые процедуры и функции, триггеры"
Создайте хранимую функцию hello(), которая будет возвращать приветствие, в зависимости от текущего времени суток. С 6:00 до 12:00 функция должна возвращать фразу "Доброе утро", с 12:00 до 18:00 функция должна возвращать фразу "Добрый день", с 18:00 до 00:00 — "Добрый вечер", с 00:00 до 6:00 — "Доброй ночи".
В таблице products есть два текстовых поля: name с названием товара и description с его описанием. Допустимо присутствие обоих полей или одно из них. Ситуация, когда оба поля принимают неопределенное значение NULL неприемлема. Используя триггеры, добейтесь того, чтобы одно из этих полей или оба поля были заполнены. При попытке присвоить полям NULL-значение необходимо отменить операцию.
(по желанию) Напишите хранимую функцию для вычисления произвольного числа Фибоначчи. Числами Фибоначчи называется последовательность в которой число равно сумме двух предыдущих чисел. Вызов функции FIBONACCI(10) должен возвращать число 55.

 */


-- 1.

START TRANSACTION;

INSERT INTO sample1.users SELECT * FROM shop.users  WHERE id=10;
DELETE FROM shop.users WHERE id=1;

COMMIT;


-- 2
USE shop;
CREATE OR REPLACE VIEW prod_cat AS
	SELECT 
		products.name AS `товар`,
		catalogs.name as `каталог`
	FROM
		shop.products
	JOIN
		shop.catalogs
	ON
		products.id = catalogs.id;
-- 
SELECT * FROM prod_cat;


-- 1 процедуры

delimiter //

CREATE FUNCTION hello()
RETURNS TINYTEXT not DETERMINISTIC
log_bin_trust_function_creators = 1;
BEGIN
  DECLARE hr INT;
  SET hr=HOUR(NOW());
  CASE
    WHEN hr BETWEEN 0 AND 5 THEN
      RETURN `ночи`;
    WHEN hr BETWEEN 6 AND 11 THEN
      RETURN `утор`;
    WHEN hr BETWEEN 12 AND 17 THEN
      RETURN `день`;
    WHEN hr BETWEEN 18 AND 23 THEN
      RETURN `вечер`;
  END CASE;
END//

SELECT hello()//


-- 2 триггеры

CREATE TRIGGER ani_name BEFORE INSERT ON products;
FOR EACH ROW BEGIN
	IF NEW.name IS NULL AND NEW.description IS NULL THEN
	  SIGNAL SQLSTATE '45000'
	  SET message_text = 'need name!';
	 END IF;
END//
	
	
	
	
	
	
	
	
	
	
	
	
	



